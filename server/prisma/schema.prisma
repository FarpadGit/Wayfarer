// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Post {
  id         String    @id @default(uuid())
  title      String
  body       String
  uploader   User      @relation(fields: [uploaderId], references: [id])
  uploaderId String
  createdAt  DateTime  @default(now())
  comments   Comment[]
}

model User {
  id       String    @id @default(uuid())
  name     String
  comments Comment[]
  likes    Like[]
  Post     Post[]
}

model Comment {
  id        String    @id @default(uuid())
  message   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  parent    Comment?  @relation("ParentChildComment", fields: [parentId], references: [id], onDelete: Cascade)
  children  Comment[] @relation("ParentChildComment")
  parentId  String?
  likes     Like[]
}

model Like {
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  comment   Comment @relation(fields: [commentId], references: [id], onDelete: Cascade)
  userId    String
  commentId String

  @@id([userId, commentId])
}
